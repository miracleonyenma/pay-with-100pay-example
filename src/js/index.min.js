let charge; class payWith100Pay { constructor(e) { } appendStyle(e) { let n = document.createElement("STYLE"); n.id = "100pay_style", n.type = "text/css", n.appendChild(document.createTextNode(e)), document.head.appendChild(n) } setup(e) { charge = e; let n = charge.api_key; delete charge.callback, delete charge.api_key; let t = charge; fetch("https://api.shop100.co/api/v1/pay/charge", { method: "POST", headers: { "Content-Type": "application/json", "api-key": n }, body: JSON.stringify(t) }).then((e => e.json())).then((e => { this.createElements(e) })).catch((e => { charge.onError(e) })) } createElements(e) { this.appendStyle("\n      #show100Pay {\n      top: 0;\n      left: 0;\n      position: fixed;\n      background-color: #000000c2;\n      width: 100vw;\n      height: 100vh;\n      z-index: 1050;\n      display: none;\n      }\n      .show100Pay {\n      transition: 0.3s;\n      height: 100vh;\n      width: 100%;\n      max-width: 400px;\n      left: 50%;\n      transform: translateX(-50%);\n      position: fixed;\n      z-index: 1050;\n      top: 100%;\n      padding-top: 0;\n      border-radius: 16px 16px 0 0;\n      overflow: hidden;\n    }\n    .show100Pay .show100Pay_modal {\n      height: calc(100% - 66px);\n      width: 100%;\n      border: none;\n      border-radius: 16px 16px 0 0;\n      padding-bottom: 0;\n      }\n      .show100Pay.show {\n      top: 66px;\n      }\n      #close_100pay_btn {\n        padding: 15px 0;\n        display: flex;\n        color: white;\n        max-width: 400px;\n        text-align: right;\n        margin: auto;\n        text-transform: uppercase;\n        justify-content: space-between;\n        align-items: center;\n      }\n      .img_wrapper {\n        display: flex;\n        gap: 8px;\n      }\n      .connected_img, .vic_hand_img {\n        height: 20px;\n      }\n      .vic_hand_img {\n        animation: shake 0.2s ease-in-out infinite alternate-reverse;\n      }\n      .close_100pay_btn {\n        color: #fff;\n        text-align: right;\n        outline: none;\n        border: none;\n        padding: 6px 12px;\n        border-radius: 8px;\n        font-weight: 700;\n        cursor: pointer;\n      }\n      .body-overflow-hidden {\n      overflow: hidden;\n      }\n      @keyframes shake {\n        0% {\n          transform: rotate(15deg);\n        }\n        100% {\n          transform: rotate(-15deg);\n        }\n      }\n\n  "); let n = document.createElement("div"), t = document.createElement("div"), a = document.createElement("iframe"), o = document.createElement("p"), d = document.createElement("div"), s = document.createElement("img"), i = document.createElement("img"), l = document.createElement("button"); const r = document.createTextNode("Close"); n.insertAdjacentHTML("afterbegin", '<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" style="margin: auto; background: none; display: block; shape-rendering: auto;" width="271px" height="271px" viewBox="0 0 100 100" preserveAspectRatio="xMidYMid">\n  <path fill="none" stroke="#ffffff" stroke-width="4" stroke-dasharray="220.66647827148438 35.92244995117187" d="M24.3 30C11.4 30 5 43.3 5 50s6.4 20 19.3 20c19.3 0 32.1-40 51.4-40 C88.6 30 95 43.3 95 50s-6.4 20-19.3 20C56.4 70 43.6 30 24.3 30z" stroke-linecap="round" style="transform:scale(0.4);transform-origin:50px 50px">\n    <animate attributeName="stroke-dashoffset" repeatCount="indefinite" dur="1.4492753623188404s" keyTimes="0;1" values="0;256.58892822265625"></animate>\n  </path>\n  <text x="50%" y="50%" fill="#ffffff" dy=".3em" style="font-size:24px;/* font-weight:bold; */text-anchor:middle;transform: scale(0.2);transform-origin: 50px 75px;"> Connecting you to the Blockchain </text>\n  </svg>'), l.appendChild(r), n.id = "100pay_loader", o.id = "close_100pay_btn", d.className = "img_wrapper", s.className = "connected_img", i.className = "vic_hand_img", i.src = "https://res.cloudinary.com/estaterally/image/upload/v1647615169/100Pay/victory-hand_zaueti.svg", s.src = "https://res.cloudinary.com/estaterally/image/upload/v1647617288/100Pay/100pay-connected_dov5km.svg", l.className = "btn text-white close_100pay_btn", l.id = "close_100pay_modal", o.appendChild(d), o.appendChild(l), a.className = "show100Pay_modal", a.id = "show100PayModal", t.className = "show100Pay", t.id = "show100PayWrapper", t.appendChild(a), document.body.classList.add("body-overflow-hidden"), document.getElementById("show100Pay").style = "display: block;", document.getElementById("show100Pay").appendChild(o), document.getElementById("show100Pay").appendChild(n), document.getElementById("show100Pay").appendChild(t), document.getElementById("close_100pay_modal").addEventListener("click", (() => { this.closeModal(charge) })); let p = document.getElementById("show100PayModal"); p.addEventListener("load", (() => { document.getElementById("show100PayWrapper").classList.add("show"), d.appendChild(i), d.appendChild(s) })), p.src = e.hosted_url } closeModal(e) { document.getElementById("show100PayWrapper").classList.remove("show"); let n = document.getElementById("show100PayWrapper"), t = document.getElementById("close_100pay_btn"); document.getElementById("100pay_loader").remove(), n.remove(), t.remove(), document.getElementById("show100Pay").style = "display: none;", document.body.classList.remove("body-overflow-hidden"), document.getElementById("100pay_style").remove(), e.onClose() } } const shop100Pay = new payWith100Pay; window.shop100Pay = shop100Pay, module.exports.shop100Pay = shop100Pay;